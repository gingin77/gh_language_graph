<!DOCTYPE html>
<meta charset="utf-8">
<html>
  <head>
  	<script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.0.1/d3.v3.min.js"></script>
    <style>
    @import url('https://fonts.googleapis.com/css?family=Josefin+Sans');
    </style>

    <style>
      body{
        max-width: 800px;
      }
      section{
        margin: 20px;
        padding: 20px;
        font-family: 'Josefin Sans', sans-serif;
      }
      #wrapper{
        display: flex;
        flex-direction: row;
        justify-content: space-between;

      }
      #graphicOne, #graphicTwo{
        display: flex;
        flex-direction: column;
        max-height: 600px;
        text-align: center;
      }
      #graphicTwo{
        margin-left: 80px;
      }
      svg {
        padding: 20px;
      }
      rect {
        fill: #060026;
      }
      text {
        fill: white;
        font-family: 'Josefin Sans', sans-serif;
      }
      text.yAxis {
        font-size: 14px;
        font-family: 'Josefin Sans', sans-serif;
        fill: #060026;
      }

      .cell {
        position: absolute;
      }

      .label{
        position: relative;
        top: 20px;
      }
    </style>
  </head>
  <body>
    <section style="font-family: 'Josefin Sans', sans-serif;">
      <div id="wrapper">
        <div id="graphicOne">
          <h3>Primary Languages for All Project Repositories on GitHub</h3>
          <div id="lang_freq"></div>
        </div>
        <div id="graphicTwo">
          <h3>TreeMap indicating byte number for each progamming language, across all GitHub project repositories</h3>
          <div id="byte_freq"></div>
        </div>
      </div>
    </section>

    <script>
      var data = <%= languages %>;
      console.log(data)

      var barWidth = 50;
      var width = (barWidth + 12) * data.length;
      var height = 380;

      var x = d3.scale.linear().domain([0, data.length]).range([0, width]);
      var y = d3.scale.linear().domain([0, d3.max(data, function(datum) { return datum.count; })]).
        rangeRound([0, height]);

      var languageBars = d3.select("#lang_freq").
        append("svg:svg").
        attr("width", width).
        attr("height", height);

      languageBars.selectAll("rect").
        data(data).
        enter().
        append("svg:rect").
        attr("x", function(datum, index) { return x(index); }).
        attr("y", function(datum) { return height - y(datum.count); }).
        attr("height", function(datum) { return y(datum.count); }).
        attr("width", barWidth);

      languageBars.selectAll("text").
        data(data).
        enter().
        append("svg:text").
        attr("x", function(datum, index) { return x(index) + barWidth; }).
        attr("y", function(datum) { return height - y(datum.count); }).
        attr("dx", -barWidth/2).
        attr("dy", "1.2em").
        attr("text-anchor", "middle").
        text(function(datum) { return datum.count;});

      languageBars.selectAll("text.yAxis").
        data(data).
        enter().append("svg:text").
        attr("x", function(datum, index) { return x(index) + barWidth; }).
        attr("y", height).
        attr("dx", -barWidth/2).
        attr("text-anchor", "middle").
        text(function(datum) { return datum.language;}).
        attr("transform", "translate(0, 18)").
        attr("class", "yAxis");
    </script>
    <script>
      var language_bytes = <%= language_byte_count %>
      console.log(language_bytes)

      var childrenFunction = function(d){return d.elements};
      var sizeFunction = function(d){return d.count;};
      var colorFunction = function(d){return Math.floor(Math.random()*20)};
      var nameFunction = function(d){return d.name;};

      var color = d3.scale.linear()
                  .domain([0,10,15,20])
                  .range(["#060026","#4E4392","#504494","#e6e6e7"]);

      drawTreemap(400, 400, '#byte_freq', language_bytes, childrenFunction, nameFunction, sizeFunction, colorFunction, color);

      function drawTreemap(height,width,elementSelector,language_bytes,childrenFunction,nameFunction,sizeFunction,colorFunction,colorScale){

          var treemap = d3.layout.treemap()
              .children(childrenFunction)
              .size([width,height])
              .value(sizeFunction)

          var div = d3.select(elementSelector)
              .append("div")
              .style("position","relative")
              .style("width",width + "px")
              .style("height",height + "px")
              .style("color","#F6F5F6");

          div.data(language_bytes).selectAll("div")
              .data(function(d){
                return treemap.nodes(d)
              })
              .enter()
              .append("div")
              .attr("class","cell")
              .style("background",function(d){
                return colorScale(colorFunction(d))
              })
              .call(cell)
            .append('text')
              .attr('class', 'label')
              .text(nameFunction);
      }

      function cell(){
          this
              .style("left",function(d){return d.x + "px";})
              .style("top",function(d){return d.y + "px";})
              .style("width",function(d){return d.dx - 1 + "px";})
              .style("height",function(d){return d.dy - 1 + "px";});
      }
    </script>
  </body>
</html>
